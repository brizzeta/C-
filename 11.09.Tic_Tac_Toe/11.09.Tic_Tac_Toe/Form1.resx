<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>