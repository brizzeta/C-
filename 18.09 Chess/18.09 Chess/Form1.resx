<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>